{"version":3,"sources":["webpack:///./src/app/@core/wqx-data/wqx-refdata.ts","webpack:///./src/app/@core/wqx-services/wqx-refdata-service.ts","webpack:///./src/app/secure/administration/adm-data-synch/adm-data-synch.component.html","webpack:///./src/app/secure/administration/adm-data-synch/adm-data-synch.component.ts","webpack:///./src/app/secure/administration/app-settings/app-settings.component.html","webpack:///./src/app/secure/administration/app-settings/app-settings.component.ts","webpack:///./src/app/secure/administration/role-list/role-list.component.html","webpack:///./src/app/secure/administration/role-list/role-list.component.ts","webpack:///./src/app/secure/administration/user-list/user-list.component.html","webpack:///./src/app/secure/administration/user-list/user-list.component.ts","webpack:///./src/app/secure/main/WqxTables.component.ts.WqxTablesComponent.html","webpack:///./src/app/secure/main/WqxTables.component.ts","webpack:///./src/app/secure/main/wqx-org-new-confirm-selection/wqx-org-new-cs.component.html","webpack:///./src/app/secure/main/wqx-org-new-confirm-selection/wqx-org-new-cs.component.ts","webpack:///./src/app/secure/main/wqx-org-new/wqx-org-new.component.html","webpack:///./src/app/secure/main/wqx-org-new/wqx-org-new.component.ts","webpack:///./src/app/secure/main/wqx-tables-routing.module.ts","webpack:///./src/app/secure/main/wqx-tables.module.ts","webpack:///./src/app/secure/ref-data/ref-data.component.html","webpack:///./src/app/secure/ref-data/ref-data.component.ts","webpack:///./src/app/secure/wqx-pages-menu.ts","webpack:///./src/app/secure/wqx-pages-routing.module.ts","webpack:///./src/app/secure/wqx-pages.component.ts.WqxPagesComponent.html","webpack:///./src/app/secure/wqx-pages.component.ts","webpack:///./src/app/secure/wqx-pages.module.ts"],"names":[],"mappings":"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","file":"secure-wqx-pages-module-ngfactory-es2015.js","sourcesContent":["import { Observable } from 'rxjs';\r\n\r\nexport interface WqxRefDefaultTimeZone {\r\n  timeZoneName: string;\r\n  officialTimeZoneName: string;\r\n  wqxCodeStandard: string;\r\n  WqxCodeDaylight: string;\r\n  actInd: boolean;\r\n  updateDt: string;\r\n  updateUserId: string;\r\n}\r\nexport interface WqxRefData {\r\n  refDataIdx: number;\r\n  table: string;\r\n  value: string;\r\n  text: string;\r\n  actInd: boolean;\r\n  usedInd: boolean;\r\n  updateDt: string;\r\n}\r\nexport interface WqxRefCharacteristic {\r\n  charName: string;\r\n  defaultDetectLimit: string;\r\n  defaultUnit: string;\r\n  userInd: boolean;\r\n  actInd: boolean;\r\n  updateDt: string;\r\n  sampFracReq: string;\r\n  pickList: string;\r\n}\r\nexport interface AnalMethodDisplay {\r\n  analytiC_METHOD_IDX: number;\r\n  analMethodDisplayName: string;\r\n}\r\nexport interface WqxRefTaxaOrg {\r\n  bioSubjectTaxonomy: string;\r\n  orgId: string;\r\n  createUserId: string;\r\n  createDt: string;\r\n}\r\nexport interface WqxRefCharOrg {\r\n  charName: string;\r\n  orgId: string;\r\n  createUserId: string;\r\n  createDt: string;\r\n  defaultDetectLimit: string;\r\n  defaultUnit: string;\r\n  defaultAnalMethodIdx: number;\r\n  defaultSampFraction: string;\r\n  defaultResultStatus: string;\r\n  defaultResultValueType: string;\r\n  defaulLowerQuantLimit: string;\r\n  defaultUpperQuantLimit: string;\r\n}\r\nexport interface WqxRefCounty {\r\n  stateCode: string;\r\n  countyCode: string;\r\n  countyName: string;\r\n  actInd: boolean;\r\n  usedInd: boolean;\r\n  updateDt: string;\r\n}\r\nexport interface WqxRefSampColMethod {\r\n  sampCollMethodIdx: number;\r\n  sampCollMethodId: string;\r\n  sampCollMethodCtx: string;\r\n  sampCollMethodName: string;\r\n  sampCollMethodDesc: string;\r\n  actInd: boolean;\r\n  updateDt: string;\r\n\r\n}\r\nexport interface WqxRefCharLimits {\r\n  charName: string;\r\n  unitName: string;\r\n  lowerBound: number;\r\n  upperBound: number;\r\n  actInd: boolean;\r\n  createDt: string;\r\n  createUserId: string;\r\n  updateDt: string;\r\n  updateUserId: string;\r\n\r\n}\r\nexport abstract class WqxRefDataData {\r\n  abstract GetT_WQX_REF_DEFAULT_TIME_ZONE(): Observable<WqxRefDefaultTimeZone[]>;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { WebApi } from '../utils/web-api';\r\nimport { WqxRefDataData, WqxRefDefaultTimeZone, WqxRefCharacteristic, AnalMethodDisplay, WqxRefTaxaOrg, WqxRefCharOrg, WqxRefCounty, WqxRefSampColMethod, WqxRefCharLimits } from '../wqx-data/wqx-refdata';\r\nimport { WqxRefData } from '../wqx-data/wqx-organization';\r\n\r\n@Injectable()\r\nexport class WQXRefDataService extends WqxRefDataData {\r\n\r\n  constructor(private http: HttpClient) {\r\n    super();\r\n  }\r\n\r\n  GetT_WQX_REF_DEFAULT_TIME_ZONE(): Observable<WqxRefDefaultTimeZone[]> {\r\n    return this.http.get<WqxRefDefaultTimeZone[]>(WebApi.TWQXRefDataApi.getTWqxRefDefaultTimeZone());\r\n  }\r\n  InsertOrUpdateT_WQX_ORGANIZATION(orgId: string, orgName: string, orgDesc: string, tribalCode: string, electronicAddress: string,\r\n    electtronicAddressType: string, telephoneNum: string, telephoneNumType: string, telephoneExt: string, cdxSubmitterId: string,\r\n    cdxSubmitterPWD: string, cdxSubmitterInd: string, defaultTimeZone: string, createUser: string, mailAddress: string,\r\n    mailAddCity: string, mailAddState: string, mailAddZip: string): Observable<number> {\r\n    const httpOptions = {};\r\n    return this.http.post<number>(WebApi.TWQXRefDataApi.InsertOrUpdateTWQXOrganization(orgId, orgName, orgDesc, tribalCode, electronicAddress,\r\n      electtronicAddressType, telephoneNum, telephoneNumType, telephoneExt, cdxSubmitterId,\r\n      cdxSubmitterPWD, cdxSubmitterInd, defaultTimeZone, createUser, mailAddress,\r\n      mailAddCity, mailAddState, mailAddZip), '', httpOptions);\r\n  }\r\n  GetT_WQX_REF_CHARACTERISTIC(actInd: boolean, onlyUsedInd: boolean): Observable<WqxRefCharacteristic[]> {\r\n    return this.http.get<WqxRefCharacteristic[]>(WebApi.TWQXRefDataApi.GetTWqxRefCharacteristic(actInd, onlyUsedInd));\r\n  }\r\n  GetT_WQX_REF_ANAL_METHOD(actInd: boolean): Observable<AnalMethodDisplay[]> {\r\n    return this.http.get<AnalMethodDisplay[]>(WebApi.TWQXRefDataApi.GetTWqxRefAnalMethod(actInd));\r\n  }\r\n  GetT_WQX_REF_DATA(table: string, actInd: boolean, usedInd: boolean): Observable<WqxRefData[]> {\r\n    return this.http.get<WqxRefData[]>(WebApi.TWQXRefDataApi.GetTWqxRefData(table, actInd, usedInd));\r\n  }\r\n  InsertOrUpdateT_WQX_REF_CHAR_ORG(charName: string, orgName: string, createUserId: string,\r\n    defaultDetectLimit: string, defaultUnit: string, defaultAnalMethodIdx: number,\r\n    defaultSampFraction: string, defaultResultStatus: string, defaultResultTypeValue: string,\r\n    defaultLowerQuantLimit: string, defaultUpperQuantLimit: string): Observable<number> {\r\n    const httpOptions = {};\r\n    return this.http.post<number>(WebApi.TWQXRefDataApi.InsertOrUpdateTWqxRefCharOrg(charName, orgName, createUserId,\r\n      defaultDetectLimit, defaultUnit, defaultAnalMethodIdx, defaultSampFraction, defaultResultStatus, defaultResultTypeValue,\r\n      defaultLowerQuantLimit, defaultUpperQuantLimit), '', httpOptions);\r\n  }\r\n  InsertOrUpdateT_WQX_REF_TAXA_ORG(bioSubjectTaxanomy: string, orgName: string, createUserId: string): Observable<number> {\r\n    const httpOptions = {};\r\n    return this.http.post<number>(WebApi.TWQXRefDataApi.insertOrUpdateTWqxRefTaxaOrg(bioSubjectTaxanomy, orgName, createUserId), '', httpOptions);\r\n  }\r\n  GetT_WQX_REF_TAXA_ORG(orgName: string): Observable<WqxRefTaxaOrg[]> {\r\n    return this.http.get<WqxRefTaxaOrg[]>(WebApi.TWQXRefDataApi.GetTWqxRefTaxaOrg(orgName));\r\n  }\r\n  GetAllColumnBasic(importType: string): Observable<string[]> {\r\n    return this.http.get<string[]>(WebApi.TWQXRefDataApi.getAllColumnBasic(importType));\r\n  }\r\n  InsertOrUpdateWQX_IMPORT_TRANSLATE(translateIdx: number, orgId: string, colName: string, dataFrom: string, dataTo: string, createUser: string): Observable<number> {\r\n    const httpOptions = {};\r\n    return this.http.post<number>(WebApi.TWQXRefDataApi.insertOrUpdateWqxImportTranslate(translateIdx === null ? 0 : translateIdx, orgId, colName, dataFrom, dataTo, createUser), '', httpOptions);\r\n  }\r\n  GetT_WQX_REF_CHAR_ORG(orgName: string): Observable<WqxRefCharOrg[]> {\r\n    return this.http.get<WqxRefCharOrg[]>(WebApi.TWQXRefDataApi.GetTWqxRefCharOrg(orgName));\r\n  }\r\n  GetT_WQX_REF_COUNTY(stateCode: string): Observable<WqxRefCounty[]> {\r\n    return this.http.get<WqxRefCounty[]>(WebApi.TWQXRefDataApi.GetTWqxRefCounty(stateCode));\r\n  }\r\n  DeleteT_WQX_REF_TAXA_ORG(orgName: string, charName: string): Observable<number> {\r\n    return this.http.delete<number>(WebApi.TWQXRefDataApi.deleteTWqxRefTaxaOrg(orgName, charName));\r\n  }\r\n  DeleteT_WQX_IMPORT_TRANSLATE(translateId: number): Observable<number> {\r\n    return this.http.delete<number>(WebApi.TWQXRefDataApi.deleteTWqxImportTranslate(translateId));\r\n  }\r\n  DeleteT_WQX_REF_CHAR_ORG(orgName: string, charName: string): Observable<number> {\r\n    return this.http.delete<number>(WebApi.TWQXRefDataApi.deleteTWqxRefTaxaOrg(orgName, charName));\r\n  }\r\n  GetT_WQX_REF_DATA_Count(): Observable<number> {\r\n    return this.http.get<number>(WebApi.TWQXRefDataApi.getTWqxRefDataCount());\r\n  }\r\n  GetT_WQX_REF_CHAR_ORG_Count(orgName: string): Observable<number> {\r\n    return this.http.get<number>(WebApi.TWQXRefDataApi.GetTWqxRefCharOrgCount(orgName));\r\n  }\r\n  GetT_WQX_REF_SAMP_COL_METHOD_ByContext(context: string): Observable<WqxRefSampColMethod[]> {\r\n    return this.http.get<WqxRefSampColMethod[]>(WebApi.TWQXRefDataApi.GetTWqxRefSampColMethodByContext(context));\r\n  }\r\n  GetT_WQX_REF_CHARACTERISTIC_ByOrg(orgId: string, rbpInd: boolean): Observable<WqxRefCharacteristic[]> {\r\n    return this.http.get<WqxRefCharacteristic[]>(WebApi.TWQXRefDataApi.getTWqxRefCharacteristicByOrg(orgId, rbpInd));\r\n  }\r\n  InsertOrUpdateT_WQX_RESULT(resultIdx: number, activityIdx: number, resultDetectCondition: string,\r\n    charName: string, resultSampFraction: string, resultMsr: string, resultMsrUnit: string,\r\n    resultStatus: string, resultValueType: string, resultComment: string,\r\n    bioIntentName: string, bioIndividualId: string, bioTaxonomy: string, bioSampleTissueAnatomy: string,\r\n    analyticMethodIdx: number, labIdx: number, labanalysisStartDt: string, detectionLimit: string, pql: string,\r\n    lowerQuantLimit: string, upperQuantLimit: string, labSampPrepIdx: number, labSampPrepStartDt: string, dilutionFactor: string,\r\n    freqClassCode: string, freqClassUnit: string, createUser: string) {\r\n    console.log(WebApi.TWQXRefDataApi.insertOrUpdateTWqxResult(resultIdx, activityIdx, resultDetectCondition,\r\n      charName, resultSampFraction, resultMsr, resultMsrUnit, resultStatus, resultValueType, resultComment,\r\n      bioIntentName, bioIndividualId, bioTaxonomy, bioSampleTissueAnatomy, analyticMethodIdx, labIdx, labanalysisStartDt, detectionLimit, pql,\r\n      lowerQuantLimit, upperQuantLimit, labSampPrepIdx, labSampPrepStartDt, dilutionFactor,\r\n      freqClassCode, freqClassUnit, createUser));\r\n    const httpOptions = {};\r\n    return this.http.post<number>(WebApi.TWQXRefDataApi.insertOrUpdateTWqxResult(resultIdx, activityIdx, resultDetectCondition,\r\n      charName, resultSampFraction, resultMsr, resultMsrUnit, resultStatus, resultValueType, resultComment,\r\n      bioIntentName, bioIndividualId, bioTaxonomy, bioSampleTissueAnatomy, analyticMethodIdx, labIdx, labanalysisStartDt, detectionLimit, pql,\r\n      lowerQuantLimit, upperQuantLimit, labSampPrepIdx, labSampPrepStartDt, dilutionFactor,\r\n      freqClassCode, freqClassUnit, createUser), '', httpOptions);\r\n  }\r\n  GetT_WQX_REF_TAXA_ByOrg(orgId: string): Observable<WqxRefData[]> {\r\n    return this.http.get<WqxRefData[]>(WebApi.TWQXRefDataApi.getTWqxRefTaxaByOrg(orgId));\r\n  }\r\n  GetT_WQX_REF_CHAR_LIMITS_ByNameUnit(charName: string, unitName: string): Observable<WqxRefCharLimits> {\r\n    return this.http.get<WqxRefCharLimits>(WebApi.TWQXRefDataApi.getTWqxRefCharLimitsByNameUnit(charName, unitName));\r\n  }\r\n  DeleteT_WQX_RESULT(resultIdx: number): Observable<number> {\r\n    return this.http.delete<number>(WebApi.TWQXRefDataApi.deleteTWqxResult(resultIdx));\r\n  }\r\n}\r\n","<p>\n  adm-data-synch works!\n</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ngx-adm-data-synch',\n  templateUrl: './adm-data-synch.component.html',\n  styleUrls: ['./adm-data-synch.component.scss']\n})\nexport class AdmDataSynchComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  app-settings works!\n</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ngx-app-settings',\n  templateUrl: './app-settings.component.html',\n  styleUrls: ['./app-settings.component.scss']\n})\nexport class AppSettingsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  role-list works!\n</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ngx-role-list',\n  templateUrl: './role-list.component.html',\n  styleUrls: ['./role-list.component.scss']\n})\nexport class RoleListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  user-list works!\n</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ngx-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.scss']\n})\nexport class UserListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<router-outlet></router-outlet>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-wqx-tables',\r\n  template: `<router-outlet></router-outlet>`,\r\n})\r\nexport class WqxTablesComponent {\r\n}\r\n","<nb-card status=\"success\">\r\n  <nb-card-header>\r\n    Confirm your Selection\r\n  </nb-card-header>\r\n\r\n  <nb-card-body>\r\n    <form>\r\n      <div class=\"form-group row\">\r\n        <label for=\"inputOrg1\" class=\"label col-sm-3 col-form-label\">You have selected organization:</label>\r\n        <div class=\"col-sm-9\">\r\n          <input type=\"org\" nbInput fullWidth id=\"inputOrg1\" placeholder=\"OrganizationID\" [(ngModel)]=\"_orgId\"\r\n            [ngModelOptions]=\"{standalone: true}\">\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group row\">\r\n        <label for=\"lblMsg1\" class=\"label col-sm-12 col-form-label\">{{ msg1 }}</label>\r\n      </div>\r\n      <div class=\"form-group row\">\r\n        <nb-checkbox status=\"primary\">I attest that I am authorized to maintain and submit water quality data for the\r\n          Organization listed above. Any misrepresentation of this may result in account termination.</nb-checkbox>\r\n      </div>\r\n      <div class=\"form-group row\">\r\n        <button nbButton (click)=\"onConfirm()\">Confirm</button>\r\n      </div>\r\n    </form>\r\n\r\n  </nb-card-body>\r\n</nb-card>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { NbAuthJWTToken, NbAuthService } from '@nebular/auth';\r\nimport { User } from '../../../@core/data/users';\r\nimport { EPAOrganization } from '../../../@core/wqx-data/wqx-organization';\r\nimport { WQXOrganizationService } from '../../../@core/wqx-services/wqx-organization-service';\r\n\r\n// declare var jQuery: any;\r\n// declare var $: any;\r\n\r\n\r\n@Component({\r\n  selector: 'ngx-wqx-org-new-cs',\r\n  templateUrl: './wqx-org-new-cs.component.html',\r\n  styleUrls: ['./wqx-org-new-cs.component.scss'],\r\n})\r\nexport class WqxOrgNewCSComponent implements OnInit {\r\n  _orgId: string;\r\n  msg1: string;\r\n  currentOrgId: string;\r\n  user: User;\r\n  eo: EPAOrganization;\r\n  constructor(private service: WQXOrganizationService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private authService: NbAuthService) {\r\n    this.authService.onTokenChange().subscribe((token: NbAuthJWTToken) => {\r\n      if (token.isValid()) {\r\n        this.user = token.getPayload(); // here we receive a payload from the token and assigns it to our `user` variable\r\n      }\r\n    });\r\n\r\n  }\r\n  ngOnInit(): void {\r\n    this.currentOrgId = this.activatedRoute.snapshot.queryParamMap.get('orgId');\r\n    if (this.currentOrgId !== '') {\r\n      this._orgId = this.currentOrgId;\r\n      this.service.getWQXOrganizationById(this.currentOrgId)\r\n        .subscribe(\r\n          (_data) => {\r\n            if (_data != null) {\r\n              this.msg1 = _data.orgFormalName + '(' + _data.orgId + ') is already using Open Waters. Click \\'Confirm\\' to notify an Administrator for this Organization to approve your access request.';\r\n            } else {\r\n              this.msg1 = 'This Organization does not yet exist in Open Waters. Click \\'Confirm\\' to request access to this organization.';\r\n            }\r\n          },\r\n        );\r\n    }\r\n\r\n\r\n    /* (function ($) {\r\n      $(document).ready(function () {\r\n        console.log(\"Hello from jQuery!\");\r\n      });\r\n    })(jQuery); */\r\n  }\r\n\r\n  onConfirm(): void {\r\n    console.log('confirm called!');\r\n    // check to see if selected organization is already in Open Waters\r\n    this.service.getWQXOrganizationById(this.currentOrgId)\r\n      .subscribe(\r\n        (org) => {\r\n          console.log('subscribe called!');\r\n          if (org == null) {\r\n            console.log('1');\r\n            // ***************************************************************************\r\n            // *************** CASE 1: CREATE NEW ORG\r\n            // ***************************************************************************\r\n            this.service.getTEPAOrgsByOrgId(this.user.userIdx)\r\n              .subscribe(\r\n                x => {\r\n                  this.eo = x;\r\n                  if (this.eo != null) {\r\n                    this.service.InsertOrUpdateTWQXOrganization(this.eo.orgID, this.eo.orgFormalName, null, null, '', null, '', null, null, null, null, false, null, this.user.name, '', '', '', '').subscribe(\r\n                      (data) => { console.log(data); },\r\n                      (err) => { console.log(err); },\r\n                    );\r\n                  } else {\r\n\r\n                  }\r\n                });\r\n          } else {\r\n            console.log('2');\r\n            // ***************************************************************************\r\n            // *************** CASE 2: ORG ALREADY IN OPEN WATERS\r\n            // ***************************************************************************\r\n\r\n            // now check to see if there are any Admins for this organization\r\n            this.service.getWQXUserOrgsAdminsByOrg(this.currentOrgId)\r\n              .subscribe(oe => console.log(oe));\r\n          }\r\n        },\r\n        (err) => { console.log(err); },\r\n        () => { console.log('complete'); },\r\n      );\r\n\r\n    // Org is now in Open Waters, so user added to Org with pending status\r\n    console.log('add orguser');\r\n    const result = this.service.insertTWQXUserOrgs(this.currentOrgId, this.user.userIdx, 'P', this.user.name)\r\n      .subscribe(\r\n        (x) => { console.log(x + ':' + result); },\r\n        (err) => { console.log(err); },\r\n        () => { console.log('complete'); },\r\n      );\r\n    // send email with request\r\n    this.msg1 = 'Your request has been made. You will be emailed when your request has been approved.';\r\n  }\r\n}\r\n","<nb-card status=\"success\">\r\n  <nb-card-header>\r\n    Join an Organization\r\n    <div class=\"greenBox\">\r\n      <div>From the list below, select the Organization that you are affiliated with.\r\n      </div>\r\n      <div>\r\n        Do not request to join an Organization to which you do not belong. Doing so may result in termination of your\r\n        Open Waters account.\r\n      </div>\r\n    </div>\r\n  </nb-card-header>\r\n\r\n  <nb-card-body>\r\n    <ng2-smart-table [settings]=\"settings\" [source]=\"source\" (deleteConfirm)=\"onDeleteConfirm($event)\"\r\n      (custom)=\"onCustom($event)\">\r\n    </ng2-smart-table>\r\n  </nb-card-body>\r\n</nb-card>","import { Component } from '@angular/core';\r\nimport { LocalDataSource } from 'ng2-smart-table';\r\nimport { WQXOrganizationService } from '../../../@core/wqx-services/wqx-organization-service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'ngx-wqx-org-new',\r\n  templateUrl: './wqx-org-new.component.html',\r\n  styleUrls: ['./wqx-org-new.component.scss'],\r\n})\r\nexport class WqxOrgNewComponent {\r\n\r\n  settings = {\r\n    actions: {\r\n      custom: [\r\n        {\r\n          name: 'select',\r\n          title: 'select',\r\n        },\r\n      ],\r\n      add: false,\r\n      edit: false,\r\n      delete: false,\r\n    },\r\n    add: {\r\n      addButtonContent: '<i class=\"nb-plus\"></i>',\r\n      createButtonContent: '<i class=\"nb-checkmark\"></i>',\r\n      cancelButtonContent: '<i class=\"nb-close\"></i>',\r\n    },\r\n    edit: {\r\n      editButtonContent: 'Select >>',\r\n      saveButtonContent: '<i class=\"nb-checkmark\"></i>',\r\n      cancelButtonContent: '<i class=\"nb-close\"></i>',\r\n    },\r\n    delete: {\r\n      deleteButtonContent: '<i class=\"nb-trash\"></i>',\r\n      confirmDelete: true,\r\n    },\r\n    columns: {\r\n      orgId: {\r\n        title: 'Organization ID',\r\n        type: 'string',\r\n        filter: true,\r\n      },\r\n      orgFormalName: {\r\n        title: 'Organization Name',\r\n        type: 'string',\r\n        filter: true,\r\n      },\r\n    },\r\n  };\r\n\r\n  source: LocalDataSource = new LocalDataSource();\r\n\r\n  constructor(private service: WQXOrganizationService,\r\n    private router: Router) {\r\n    this.service.getVWQXAllOrgs()\r\n      .subscribe(\r\n        (_data) => {\r\n          this.source.load(_data);\r\n        },\r\n      );\r\n    // this.source.load(data);\r\n  }\r\n\r\n  onDeleteConfirm(event): void {\r\n    if (window.confirm('Are you sure you want to delete?')) {\r\n      event.confirm.resolve();\r\n    } else {\r\n      event.confirm.reject();\r\n    }\r\n  }\r\n\r\n  onCustom(event): void {\r\n    const orgId = event.data.orgId;\r\n    this.router.navigate(['/secure/main/wqx-org-new-cs'], { queryParams: { orgId: orgId } });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { WqxTablesComponent } from './WqxTables.component';\r\nimport { WqxOrgNewComponent } from './wqx-org-new/wqx-org-new.component';\r\nimport { WqxOrgNewCSComponent } from './wqx-org-new-confirm-selection/wqx-org-new-cs.component';\r\n\r\nconst routes: Routes = [{\r\n  path: '',\r\n  component: WqxTablesComponent,\r\n  children: [\r\n    {\r\n      path: 'wqx-org-new',\r\n      component: WqxOrgNewComponent,\r\n    },\r\n    {\r\n      path: 'wqx-org-new-cs',\r\n      component: WqxOrgNewCSComponent,\r\n    },\r\n  ],\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class WqxTablesRoutingModule { }\r\n\r\nexport const wqxRoutedComponents = [\r\n  WqxTablesComponent,\r\n  WqxOrgNewComponent,\r\n  WqxOrgNewCSComponent,\r\n];\r\n","import { NgModule } from '@angular/core';\r\nimport { NbCardModule, NbIconModule, NbInputModule, NbTreeGridModule, NbCheckboxModule } from '@nebular/theme';\r\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\r\n\r\nimport { ThemeModule } from '../../@theme/theme.module';\r\nimport { WqxTablesRoutingModule } from './wqx-tables-routing.module';\r\nimport { wqxRoutedComponents } from './wqx-tables-routing.module';\r\n\r\nimport { WqxOrgNewComponent } from './wqx-org-new/wqx-org-new.component';\r\nimport { WqxOrgNewCSComponent } from './wqx-org-new-confirm-selection/wqx-org-new-cs.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    NbCardModule,\r\n    NbTreeGridModule,\r\n    NbIconModule,\r\n    NbInputModule,\r\n    ThemeModule,\r\n    WqxTablesRoutingModule,\r\n    Ng2SmartTableModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\nNbCheckboxModule,\r\n  ],\r\n  declarations: [\r\n    ...wqxRoutedComponents,\r\n    WqxOrgNewComponent,\r\n    WqxOrgNewCSComponent,\r\n  ],\r\n})\r\nexport class WqxTablesModule { }\r\n","<p>\n  ref-data works!\n</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ngx-ref-data',\n  templateUrl: './ref-data.component.html',\n  styleUrls: ['./ref-data.component.scss']\n})\nexport class RefDataComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NbMenuItem } from '@nebular/theme';\r\n\r\nexport const WQX_MENU_ITEMS: NbMenuItem[] = [\r\n  {\r\n    title: 'Home',\r\n    icon: 'shopping-cart-outline',\r\n    link: '/pages/dashboard',\r\n    home: true,\r\n  },\r\n  {\r\n    title: 'Water Quality',\r\n    icon: 'grid-outline',\r\n    children: [\r\n      {\r\n        title: 'Organizations',\r\n        link: '/secure/water-quality/wqx-org',\r\n      },\r\n      {\r\n        title: 'Monitoring Locs',\r\n        link: '/secure/water-quality/wqx-monloc',\r\n      },\r\n      {\r\n        title: 'Projects',\r\n        link: '/secure/water-quality/wqx-project',\r\n      },\r\n      {\r\n        title: 'Activity/Result',\r\n        link: '/secure/water-quality/wqx-activity',\r\n      },\r\n      {\r\n        title: 'Import Data',\r\n        link: '/secure/water-quality/wqx-import',\r\n      },\r\n      {\r\n        title: 'Retrieve From EPA',\r\n        link: '/secure/water-quality/wqx-import-from-epa',\r\n      },\r\n      {\r\n        title: 'WQX History',\r\n        link: '/secure/water-quality/wqx-mgmt',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: 'Data Analysis',\r\n    icon: 'grid-outline',\r\n    children: [\r\n      {\r\n        title: 'Assessment Rpts',\r\n        link: '/secure/data-analysis/wqx-assesment-rpts',\r\n      },\r\n      {\r\n        title: 'Map',\r\n        link: '/secure/data-analysis/wqx-maps',\r\n      },\r\n      {\r\n        title: 'Graphs',\r\n        link: '/secure/data-analysis/wqx-charting',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: 'Ref-Data',\r\n    icon: 'shopping-cart-outline',\r\n    link: '/secure/ref-data',\r\n    home: true,\r\n  },\r\n  {\r\n    title: 'Administration',\r\n    icon: 'grid-outline',\r\n    children: [\r\n      {\r\n        title: 'User Management',\r\n        link: '/secure/admin/users',\r\n      },\r\n      {\r\n        title: 'Role Management',\r\n        link: '/secure/admin/roles',\r\n      },\r\n      {\r\n        title: 'App Settings',\r\n        link: '/secure/admin/app-settings',\r\n      },\r\n      {\r\n        title: 'Data Synch',\r\n        link: '/secure/admin/data-synch',\r\n      },\r\n    ],\r\n  },\r\n];\r\n","import { RouterModule, Routes } from '@angular/router';\r\nimport { NgModule, Component } from '@angular/core';\r\n\r\nimport { WqxPagesComponent } from './wqx-pages.component';\r\nimport { NotFoundComponent } from '../pages/miscellaneous/not-found/not-found.component';\r\nimport { RefDataComponent } from './ref-data/ref-data.component';\r\nimport { UserListComponent } from './administration/user-list/user-list.component';\r\nimport { RSA_PKCS1_OAEP_PADDING } from 'constants';\r\nimport { RoleListComponent } from './administration/role-list/role-list.component';\r\nimport { AppSettingsComponent } from './administration/app-settings/app-settings.component';\r\nimport { AdmDataSynchComponent } from './administration/adm-data-synch/adm-data-synch.component';\r\n\r\nconst routes: Routes = [{\r\n  path: '',\r\n  component: WqxPagesComponent,\r\n  children: [\r\n    {\r\n      path: 'main',\r\n      loadChildren: () => import('./main/wqx-tables.module')\r\n        .then(m => m.WqxTablesModule),\r\n    },\r\n    {\r\n      path: 'water-quality',\r\n      loadChildren: () => import('./water-quality/wqx-water-quality.module')\r\n        .then(m => m.WqxWaterQualityModule),\r\n    },\r\n    {\r\n      path: 'ref-data',\r\n      component: RefDataComponent,\r\n    },\r\n    {\r\n      path: 'admin',\r\n      children: [\r\n        {\r\n          path: 'users',\r\n          component: UserListComponent,\r\n        },\r\n        {\r\n          path: 'roles',\r\n          component: RoleListComponent,\r\n        },\r\n        {\r\n          path: 'app-settings',\r\n          component: AppSettingsComponent,\r\n        },\r\n        {\r\n          path: 'data-synch',\r\n          component: AdmDataSynchComponent,\r\n        }\r\n      ],\r\n    },\r\n    {\r\n      path: '',\r\n      redirectTo: 'dashboard',\r\n      pathMatch: 'full',\r\n    },\r\n    {\r\n      path: '**',\r\n      component: NotFoundComponent,\r\n    },\r\n  ],\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class WqxPagesRoutingModule {\r\n}\r\n","\n    <ngx-one-column-layout>\n      <nb-menu [items]=\"menu\"></nb-menu>\n      <router-outlet></router-outlet>\n    </ngx-one-column-layout>\n  ","import { Component } from '@angular/core';\r\n\r\nimport { WQX_MENU_ITEMS } from './wqx-pages-menu';\r\n\r\n@Component({\r\n  selector: 'ngx-wqx-pages',\r\n  styleUrls: ['wqx-pages.component.scss'],\r\n  template: `\r\n    <ngx-one-column-layout>\r\n      <nb-menu [items]=\"menu\"></nb-menu>\r\n      <router-outlet></router-outlet>\r\n    </ngx-one-column-layout>\r\n  `,\r\n})\r\nexport class WqxPagesComponent {\r\n\r\n  menu = WQX_MENU_ITEMS;\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { NbMenuModule, NbCheckboxModule, NbTabsetModule } from '@nebular/theme';\r\n\r\nimport { ThemeModule } from '../@theme/theme.module';\r\nimport { WqxPagesComponent } from './wqx-pages.component';\r\n\r\nimport { WqxPagesRoutingModule } from './wqx-pages-routing.module';\r\nimport { MiscellaneousModule } from '../pages/miscellaneous/miscellaneous.module';\r\nimport { WqxTablesModule } from './main/wqx-tables.module';\r\nimport { WQXOrganizationService } from '../@core/wqx-services/wqx-organization-service';\r\nimport { NgxAuthJWTInterceptor } from '../NgxAuthJWTInterceptor';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { WqxAssesmentRptsComponent } from './data-analysis/wqx-assesment-rpts/wqx-assesment-rpts.component';\r\nimport { WqxMapsComponent } from './data-analysis/wqx-maps/wqx-maps.component';\r\nimport { WqxChartingComponent } from './data-analysis/wqx-charting/wqx-charting.component';\r\nimport { WQXRefDataService } from '../@core/wqx-services/wqx-refdata-service';\nimport { RefDataComponent } from './ref-data/ref-data.component';\nimport { UserListComponent } from './administration/user-list/user-list.component';\nimport { RoleListComponent } from './administration/role-list/role-list.component';\nimport { AppSettingsComponent } from './administration/app-settings/app-settings.component';\nimport { AdmDataSynchComponent } from './administration/adm-data-synch/adm-data-synch.component';\nimport { UserEditComponent } from './administration/user-edit/user-edit.component';\nimport { RoleEditComponent } from './administration/role-edit/role-edit.component';\r\n\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    WqxPagesRoutingModule,\r\n    ThemeModule,\r\n    NbMenuModule,\r\n    MiscellaneousModule,\r\n    WqxTablesModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NbCheckboxModule,\r\n    NbTabsetModule,\r\n\r\n  ],\r\n  declarations: [\r\n    WqxPagesComponent,\r\n    WqxAssesmentRptsComponent,\r\n    WqxMapsComponent,\r\n    WqxChartingComponent,\r\n    RefDataComponent,\r\n    UserListComponent,\r\n    RoleListComponent,\r\n    AppSettingsComponent,\r\n    AdmDataSynchComponent,\r\n    UserEditComponent,\r\n    RoleEditComponent,\r\n    // WqxOrgComponent,\r\n    // WqxTablesComponent,\r\n\r\n  ],\r\n  providers: [\r\n    WQXOrganizationService,\r\n    WQXRefDataService,\r\n    { provide: HTTP_INTERCEPTORS, useClass: NgxAuthJWTInterceptor, multi: true },\r\n  ],\r\n\r\n})\r\nexport class WqxPagesModule {\r\n}\r\n"],"sourceRoot":""}